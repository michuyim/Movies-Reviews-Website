{"ast":null,"code":"var _jsxFileName = \"/Users/michuyim/Desktop/movie-review/client/src/components/ReviewForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Container, TextField, Button, Grid, Typography } from '@mui/material';\nimport Rating from '@mui/lab/Rating'; // Import Rating component from MUI Lab\nimport { useUser } from './UserContext'; // Import the UserContext\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ReviewForm({\n  addReview\n}) {\n  _s();\n  const {\n    user\n  } = useUser(); // Get the user from context\n  const [title, setTitle] = useState('');\n  const [comment, setComment] = useState('');\n  const [rating, setRating] = useState(0); // Initialize rating with 0\n  const [wordCount, setWordCount] = useState(0); // State to keep track of word count\n  const [titleCount, setTitleCount] = useState(0);\n  const handleCommentChange = event => {\n    const words = event.target.value.match(/\\b[-?(\\w+)?]+\\b/gi);\n    if (words && words.length <= 30) {\n      setComment(event.target.value);\n      setWordCount(words.length);\n    } else if (!words) {\n      setComment('');\n      setWordCount(0);\n    }\n  };\n  const handleTitleChange = e => {\n    const words = e.target.value.match(/\\b[-?(\\w+)?]+\\b/gi);\n    if (words && words.length <= 10) {\n      setTitle(e.target.value);\n      setTitleCount(words.length);\n    } else if (!words) {\n      setTitle('');\n      setTitleCount(0);\n    }\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    const reviewData = {\n      title,\n      comment,\n      rating\n    };\n\n    // Fetch API call to POST data to the server\n    fetch('http://localhost:2003/api/reviews', {\n      // Adjust this URL to match your server configuration\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: 'include',\n      // Send cookies with the request\n      body: JSON.stringify(reviewData)\n    }).then(response => response.json()).then(data => {\n      console.log('Success:', data);\n      addReview(data); // Assuming addReview updates state in parent component\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n\n    // Resetting form fields\n    setTitle('');\n    setComment('');\n    setRating(0); // Reset rating\n    setWordCount(0);\n    setTitleCount(0);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            component: \"h1\",\n            gutterBottom: true,\n            children: \"Submit Your Review\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            component: \"h2\",\n            children: [\"Username: \", user === null || user === void 0 ? void 0 : user.username]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Movie Title (10 words max)\",\n            variant: \"outlined\",\n            fullWidth: true,\n            value: title,\n            onChange: handleTitleChange,\n            helperText: `${titleCount}/10 words`,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Your Review (30 words max)\",\n            variant: \"outlined\",\n            fullWidth: true,\n            multiline: true,\n            rows: 4,\n            value: comment,\n            onChange: handleCommentChange,\n            helperText: `${wordCount}/30 words`,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            component: \"legend\",\n            children: \"Your Rating\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Rating, {\n            name: \"rating\",\n            value: rating,\n            onChange: (event, newValue) => {\n              setRating(newValue);\n            },\n            precision: 1,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"primary\",\n            fullWidth: true,\n            children: \"Submit Your Review\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(ReviewForm, \"5vM1zfXV8bbZlGIoR/oQuTqoRH8=\", false, function () {\n  return [useUser];\n});\n_c = ReviewForm;\nexport default ReviewForm;\nvar _c;\n$RefreshReg$(_c, \"ReviewForm\");","map":{"version":3,"names":["React","useState","Container","TextField","Button","Grid","Typography","Rating","useUser","jsxDEV","_jsxDEV","ReviewForm","addReview","_s","user","title","setTitle","comment","setComment","rating","setRating","wordCount","setWordCount","titleCount","setTitleCount","handleCommentChange","event","words","target","value","match","length","handleTitleChange","e","handleSubmit","preventDefault","reviewData","fetch","method","headers","credentials","body","JSON","stringify","then","response","json","data","console","log","catch","error","maxWidth","children","onSubmit","container","spacing","item","xs","variant","component","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","username","label","fullWidth","onChange","helperText","required","multiline","rows","name","newValue","precision","type","color","_c","$RefreshReg$"],"sources":["/Users/michuyim/Desktop/movie-review/client/src/components/ReviewForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Container, TextField, Button, Grid, Typography } from '@mui/material';\nimport Rating from '@mui/lab/Rating';  // Import Rating component from MUI Lab\nimport { useUser } from './UserContext'; // Import the UserContext\n\nfunction ReviewForm({ addReview }) {\n  const { user } = useUser(); // Get the user from context\n  const [title, setTitle] = useState('');\n  const [comment, setComment] = useState('');\n  const [rating, setRating] = useState(0); // Initialize rating with 0\n  const [wordCount, setWordCount] = useState(0); // State to keep track of word count\n  const [titleCount, setTitleCount] = useState(0);\n\n  const handleCommentChange = (event) => {\n    const words = event.target.value.match(/\\b[-?(\\w+)?]+\\b/gi);\n    if (words && words.length <= 30) {\n      setComment(event.target.value);\n      setWordCount(words.length);\n    } else if (!words) {\n      setComment('');\n      setWordCount(0);\n    }\n  };\n\n  const handleTitleChange = (e) => {\n    const words = e.target.value.match(/\\b[-?(\\w+)?]+\\b/gi);\n    if (words && words.length <= 10) {\n      setTitle(e.target.value);\n      setTitleCount(words.length);\n    } else if (!words) {\n      setTitle('');\n      setTitleCount(0);\n    }\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const reviewData = { title, comment, rating };\n\n    // Fetch API call to POST data to the server\n    fetch('http://localhost:2003/api/reviews', { // Adjust this URL to match your server configuration\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      credentials: 'include', // Send cookies with the request\n      body: JSON.stringify(reviewData),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log('Success:', data);\n        addReview(data); // Assuming addReview updates state in parent component\n      })\n      .catch((error) => {\n        console.error('Error:', error);\n      });\n\n    // Resetting form fields\n    setTitle('');\n    setComment('');\n    setRating(0); // Reset rating\n    setWordCount(0);\n    setTitleCount(0);\n  };\n\n  return (\n    <Container maxWidth=\"sm\">\n      <form onSubmit={handleSubmit}>\n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n            <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n              Submit Your Review\n            </Typography>\n          </Grid>\n          <Grid item xs={12}>\n            <Typography variant=\"h6\" component=\"h2\">\n              Username: {user?.username}\n            </Typography>\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              label=\"Movie Title (10 words max)\"\n              variant=\"outlined\"\n              fullWidth\n              value={title}\n              onChange={handleTitleChange}\n              helperText={`${titleCount}/10 words`}\n              required\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              label=\"Your Review (30 words max)\"\n              variant=\"outlined\"\n              fullWidth\n              multiline\n              rows={4}\n              value={comment}\n              onChange={handleCommentChange}\n              helperText={`${wordCount}/30 words`}\n              required\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Typography component=\"legend\">Your Rating</Typography>\n            <Rating\n              name=\"rating\"\n              value={rating}\n              onChange={(event, newValue) => {\n                setRating(newValue);\n              }}\n              precision={1}\n              required\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\n              Submit Your Review\n            </Button>\n          </Grid>\n        </Grid>\n      </form>\n    </Container>\n  );\n}\n\nexport default ReviewForm;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,EAAEC,SAAS,EAAEC,MAAM,EAAEC,IAAI,EAAEC,UAAU,QAAQ,eAAe;AAC9E,OAAOC,MAAM,MAAM,iBAAiB,CAAC,CAAE;AACvC,SAASC,OAAO,QAAQ,eAAe,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzC,SAASC,UAAUA,CAAC;EAAEC;AAAU,CAAC,EAAE;EAAAC,EAAA;EACjC,MAAM;IAAEC;EAAK,CAAC,GAAGN,OAAO,CAAC,CAAC,CAAC,CAAC;EAC5B,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACkB,MAAM,EAAEC,SAAS,CAAC,GAAGnB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EACzC,MAAM,CAACoB,SAAS,EAAEC,YAAY,CAAC,GAAGrB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACsB,UAAU,EAAEC,aAAa,CAAC,GAAGvB,QAAQ,CAAC,CAAC,CAAC;EAE/C,MAAMwB,mBAAmB,GAAIC,KAAK,IAAK;IACrC,MAAMC,KAAK,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAACC,KAAK,CAAC,mBAAmB,CAAC;IAC3D,IAAIH,KAAK,IAAIA,KAAK,CAACI,MAAM,IAAI,EAAE,EAAE;MAC/Bb,UAAU,CAACQ,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC;MAC9BP,YAAY,CAACK,KAAK,CAACI,MAAM,CAAC;IAC5B,CAAC,MAAM,IAAI,CAACJ,KAAK,EAAE;MACjBT,UAAU,CAAC,EAAE,CAAC;MACdI,YAAY,CAAC,CAAC,CAAC;IACjB;EACF,CAAC;EAED,MAAMU,iBAAiB,GAAIC,CAAC,IAAK;IAC/B,MAAMN,KAAK,GAAGM,CAAC,CAACL,MAAM,CAACC,KAAK,CAACC,KAAK,CAAC,mBAAmB,CAAC;IACvD,IAAIH,KAAK,IAAIA,KAAK,CAACI,MAAM,IAAI,EAAE,EAAE;MAC/Bf,QAAQ,CAACiB,CAAC,CAACL,MAAM,CAACC,KAAK,CAAC;MACxBL,aAAa,CAACG,KAAK,CAACI,MAAM,CAAC;IAC7B,CAAC,MAAM,IAAI,CAACJ,KAAK,EAAE;MACjBX,QAAQ,CAAC,EAAE,CAAC;MACZQ,aAAa,CAAC,CAAC,CAAC;IAClB;EACF,CAAC;EAED,MAAMU,YAAY,GAAIR,KAAK,IAAK;IAC9BA,KAAK,CAACS,cAAc,CAAC,CAAC;IACtB,MAAMC,UAAU,GAAG;MAAErB,KAAK;MAAEE,OAAO;MAAEE;IAAO,CAAC;;IAE7C;IACAkB,KAAK,CAAC,mCAAmC,EAAE;MAAE;MAC3CC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,WAAW,EAAE,SAAS;MAAE;MACxBC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,UAAU;IACjC,CAAC,CAAC,CACCQ,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACdC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEF,IAAI,CAAC;MAC7BnC,SAAS,CAACmC,IAAI,CAAC,CAAC,CAAC;IACnB,CAAC,CAAC,CACDG,KAAK,CAAEC,KAAK,IAAK;MAChBH,OAAO,CAACG,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC,CAAC,CAAC;;IAEJ;IACAnC,QAAQ,CAAC,EAAE,CAAC;IACZE,UAAU,CAAC,EAAE,CAAC;IACdE,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;IACdE,YAAY,CAAC,CAAC,CAAC;IACfE,aAAa,CAAC,CAAC,CAAC;EAClB,CAAC;EAED,oBACEd,OAAA,CAACR,SAAS;IAACkD,QAAQ,EAAC,IAAI;IAAAC,QAAA,eACtB3C,OAAA;MAAM4C,QAAQ,EAAEpB,YAAa;MAAAmB,QAAA,eAC3B3C,OAAA,CAACL,IAAI;QAACkD,SAAS;QAACC,OAAO,EAAE,CAAE;QAAAH,QAAA,gBACzB3C,OAAA,CAACL,IAAI;UAACoD,IAAI;UAACC,EAAE,EAAE,EAAG;UAAAL,QAAA,eAChB3C,OAAA,CAACJ,UAAU;YAACqD,OAAO,EAAC,IAAI;YAACC,SAAS,EAAC,IAAI;YAACC,YAAY;YAAAR,QAAA,EAAC;UAErD;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC,eACPvD,OAAA,CAACL,IAAI;UAACoD,IAAI;UAACC,EAAE,EAAE,EAAG;UAAAL,QAAA,eAChB3C,OAAA,CAACJ,UAAU;YAACqD,OAAO,EAAC,IAAI;YAACC,SAAS,EAAC,IAAI;YAAAP,QAAA,GAAC,YAC5B,EAACvC,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEoD,QAAQ;UAAA;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACf;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC,eACPvD,OAAA,CAACL,IAAI;UAACoD,IAAI;UAACC,EAAE,EAAE,EAAG;UAAAL,QAAA,eAChB3C,OAAA,CAACP,SAAS;YACRgE,KAAK,EAAC,4BAA4B;YAClCR,OAAO,EAAC,UAAU;YAClBS,SAAS;YACTvC,KAAK,EAAEd,KAAM;YACbsD,QAAQ,EAAErC,iBAAkB;YAC5BsC,UAAU,EAAG,GAAE/C,UAAW,WAAW;YACrCgD,QAAQ;UAAA;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eACPvD,OAAA,CAACL,IAAI;UAACoD,IAAI;UAACC,EAAE,EAAE,EAAG;UAAAL,QAAA,eAChB3C,OAAA,CAACP,SAAS;YACRgE,KAAK,EAAC,4BAA4B;YAClCR,OAAO,EAAC,UAAU;YAClBS,SAAS;YACTI,SAAS;YACTC,IAAI,EAAE,CAAE;YACR5C,KAAK,EAAEZ,OAAQ;YACfoD,QAAQ,EAAE5C,mBAAoB;YAC9B6C,UAAU,EAAG,GAAEjD,SAAU,WAAW;YACpCkD,QAAQ;UAAA;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eACPvD,OAAA,CAACL,IAAI;UAACoD,IAAI;UAACC,EAAE,EAAE,EAAG;UAAAL,QAAA,gBAChB3C,OAAA,CAACJ,UAAU;YAACsD,SAAS,EAAC,QAAQ;YAAAP,QAAA,EAAC;UAAW;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACvDvD,OAAA,CAACH,MAAM;YACLmE,IAAI,EAAC,QAAQ;YACb7C,KAAK,EAAEV,MAAO;YACdkD,QAAQ,EAAEA,CAAC3C,KAAK,EAAEiD,QAAQ,KAAK;cAC7BvD,SAAS,CAACuD,QAAQ,CAAC;YACrB,CAAE;YACFC,SAAS,EAAE,CAAE;YACbL,QAAQ;UAAA;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eACPvD,OAAA,CAACL,IAAI;UAACoD,IAAI;UAACC,EAAE,EAAE,EAAG;UAAAL,QAAA,eAChB3C,OAAA,CAACN,MAAM;YAACyE,IAAI,EAAC,QAAQ;YAAClB,OAAO,EAAC,WAAW;YAACmB,KAAK,EAAC,SAAS;YAACV,SAAS;YAAAf,QAAA,EAAC;UAEpE;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEhB;AAACpD,EAAA,CAvHQF,UAAU;EAAA,QACAH,OAAO;AAAA;AAAAuE,EAAA,GADjBpE,UAAU;AAyHnB,eAAeA,UAAU;AAAC,IAAAoE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}